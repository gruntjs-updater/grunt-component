/*
 * grunt-concat-seajs
 * https://github.com/zero-g/grunt-concat-seajs
 *
 * Copyright (c) 2015 zero-g
 * Licensed under the MIT license.
 */

'use strict';

module.exports = function(grunt) {
    var crypto = require('crypto');
    var path = require('path');
    var fs = require('fs');
    var findup = require('findup-sync');
    var template = require('ali-arttemplate');
    var cssmin = require('cssmin');

    grunt.registerMultiTask('seajs_component', 'profile', function() {
        var options = this.options({
        });
        this.files.forEach(function(filePair) {
            filePair.src.forEach(function(file) {
                var fileSource = fs.readFileSync(file, 'utf-8');
                fileSource = parseCss(file, fileSource);
                fileSource = parseTmpl(file, fileSource);
                fs.writeFileSync(file, fileSource);
            });
        });

        function parseCss(cssFile, file, source) {
            var cssFile = './../css/index.css';
            if(source.indexOf(cssFile) === -1)  {
                return source;
            }

            cssFile = path.join(path.dirname(file), cssFile);
            cssFile = fs.readFileSync(cssFile, 'utf-8');
            console.log(cssFile);
            var min = cssmin(cssFile);
            console.log('min', cssFile);

            source = source.replace('./../css/index.css', min);
            return source;
        }
        function parseTmpl(file, source) {
            //var tpl = __inline_tpl('head.tmpl')
            var tmplFile = 'head.tmpl';
            if(source.indexOf(tmplFile) === -1)  {
                return source;
            }
            tmplFile = path.join(path.dirname(file), tmplFile);
            tmplFile = fs.readFileSync(tmplFile, 'utf-8');
            console.log(tmplFile);

            var content = template.compile(tmplFile).toString().replace(/^function anonymous/, 'function');
            content = content.replace("'use strict';", '');
            source = source.replace("__inline_tpl('head.tmpl')", '[' + content + '][0]');
            return source;
        }

    });
};
